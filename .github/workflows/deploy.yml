name: Auto Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  deploy:
    name: Deploy
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 5
    steps:
      - name: Deploy
        timeout-minutes: 5
        run: |
          set -e
          cd /var/www/auth-api

          echo "📥 Pulling latest code..."
          git fetch origin main
          git reset --hard origin/main

          echo "🔄 Redeploying with latest code..."
          docker-compose -f docker-compose.prod.yml down
          docker-compose -f docker-compose.prod.yml build --no-cache api
          docker-compose -f docker-compose.prod.yml --env-file .env.production up -d --force-recreate

          echo "⏳ Waiting for containers..."
          sleep 10

          echo "✅ Deployed!"
          docker-compose -f docker-compose.prod.yml ps

           echo "✅ Management API is running on port 3080 (HTTP) and 3443 (HTTPS)"
           echo "🔧 Creating server-level Nginx configuration for auth.uzswlu.uz..."
           
           # Create SSL certificate directory
           mkdir -p /etc/nginx/ssl/auth.uzswlu.uz
           
           # Copy SSL certificates
           cp /var/www/sertifikat/STAR25_uzswlu_uz.crt /etc/nginx/ssl/auth.uzswlu.uz/
           cp /var/www/sertifikat/STAR25_uzswlu_uz.key /etc/nginx/ssl/auth.uzswlu.uz/
           chmod 644 /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.crt
           chmod 600 /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.key
           
           # Create Nginx configuration
           cat > /etc/nginx/sites-available/auth.uzswlu.uz << 'EOF'
# HTTP -> HTTPS redirect
server {
    listen 80;
    server_name auth.uzswlu.uz;
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name auth.uzswlu.uz;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.crt;
    ssl_certificate_key /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Client max body size
    client_max_body_size 20M;

    # Proxy to Management Nginx (port 3080)
    location / {
        proxy_pass http://127.0.0.1:3080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Health check endpoint
    location /api/health {
        proxy_pass http://127.0.0.1:3080;
        access_log off;
    }

    # API documentation
    location /api-docs {
        proxy_pass http://127.0.0.1:3080;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
EOF
           
           # Enable site
           ln -sf /etc/nginx/sites-available/auth.uzswlu.uz /etc/nginx/sites-enabled/
           
           # Remove default site
           rm -f /etc/nginx/sites-enabled/default
           
           # Test and reload Nginx
           nginx -t && nginx -s reload
           
           echo "✅ Server-level Nginx configured for auth.uzswlu.uz"
