name: Auto Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  deploy:
    name: Deploy
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 5
    steps:
      - name: Deploy
        timeout-minutes: 5
        run: |
          set -e
          cd /var/www/auth-api

          echo "📥 Pulling latest code..."
          git fetch origin main
          git reset --hard origin/main

          echo "🔄 Redeploying with latest code..."
          docker-compose -f docker-compose.prod.yml down
          docker-compose -f docker-compose.prod.yml build --no-cache api
          docker-compose -f docker-compose.prod.yml --env-file .env.production up -d --force-recreate

          echo "⏳ Waiting for containers..."
          sleep 10

          echo "✅ Deployed!"
          docker-compose -f docker-compose.prod.yml ps

          # Complete Server Nginx Management for auth.uzswlu.uz
          echo "🔧 Complete Server Nginx Management for auth.uzswlu.uz..."
          
          # 1. Create SSL certificate directory for auth.uzswlu.uz
          echo "📁 Creating SSL certificate directory..."
          sudo mkdir -p /etc/nginx/ssl/auth.uzswlu.uz
          
          # 2. Copy existing SSL certificates
          echo "🔒 Copying SSL certificates..."
          if [ -f "/var/www/sertifikat/STAR25_uzswlu_uz.crt" ]; then
            sudo cp /var/www/sertifikat/STAR25_uzswlu_uz.crt /etc/nginx/ssl/auth.uzswlu.uz/
            sudo cp /var/www/sertifikat/STAR25_uzswlu_uz.key /etc/nginx/ssl/auth.uzswlu.uz/
            sudo chmod 644 /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.crt
            sudo chmod 600 /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.key
            echo "✅ SSL certificates copied successfully"
          else
            echo "⚠️ SSL certificates not found in /var/www/sertifikat/"
            echo "Creating self-signed certificates for testing..."
            sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
              -keyout /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.key \
              -out /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.crt \
              -subj "/C=UZ/ST=Tashkent/L=Tashkent/O=Auth API/OU=IT Department/CN=auth.uzswlu.uz"
          fi
          
          # 3. Create comprehensive Nginx configuration for auth.uzswlu.uz
          echo "📝 Creating comprehensive Nginx configuration for auth.uzswlu.uz..."
          sudo rm -f /etc/nginx/sites-available/auth.uzswlu.uz
          echo "# HTTP -> HTTPS redirect" | sudo tee /etc/nginx/sites-available/auth.uzswlu.uz
          echo "server {" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    listen 80;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    server_name auth.uzswlu.uz;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    # Let's Encrypt validation" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    location /.well-known/acme-challenge/ {" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        root /var/www/html;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    }" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    # Redirect all other requests to HTTPS" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    location / {" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        return 301 https://\$server_name\$request_uri;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    }" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "}" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "# HTTPS server" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "server {" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    listen 443 ssl http2;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    server_name auth.uzswlu.uz;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    # SSL Configuration" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    ssl_certificate /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.crt;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    ssl_certificate_key /etc/nginx/ssl/auth.uzswlu.uz/STAR25_uzswlu_uz.key;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    ssl_protocols TLSv1.2 TLSv1.3;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    ssl_prefer_server_ciphers off;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    ssl_session_cache shared:SSL:10m;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    ssl_session_timeout 10m;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    ssl_session_tickets off;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    # Security Headers" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    add_header X-Frame-Options \"SAMEORIGIN\" always;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    add_header X-Content-Type-Options \"nosniff\" always;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    add_header X-XSS-Protection \"1; mode=block\" always;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    add_header Referrer-Policy \"no-referrer-when-downgrade\" always;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    # Client max body size" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    client_max_body_size 20M;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    # Proxy to Management Nginx (port 3080)" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    location / {" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_pass http://127.0.0.1:3080;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_set_header Host \$host;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_set_header X-Real-IP \$remote_addr;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_set_header X-Forwarded-Proto \$scheme;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_redirect off;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        # Timeouts" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_connect_timeout 30s;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_send_timeout 30s;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_read_timeout 30s;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        # Buffering" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_buffering on;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_buffer_size 4k;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_buffers 8 4k;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_busy_buffers_size 8k;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    }" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    # Health check endpoint" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    location /api/health {" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_pass http://127.0.0.1:3080;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        access_log off;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    }" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    " | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    # API documentation" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    location /api-docs {" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        proxy_pass http://127.0.0.1:3080;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        expires 1y;" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "        add_header Cache-Control \"public, immutable\";" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "    }" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          echo "}" | sudo tee -a /etc/nginx/sites-available/auth.uzswlu.uz
          
          # 4. Enable auth.uzswlu.uz site
          echo "✅ Enabling auth.uzswlu.uz site..."
          sudo ln -sf /etc/nginx/sites-available/auth.uzswlu.uz /etc/nginx/sites-enabled/
          
          # 5. Test Nginx configuration
          echo "🧪 Testing Nginx configuration..."
          if sudo nginx -t; then
            echo "✅ Nginx configuration is valid"
          else
            echo "❌ Nginx configuration has errors"
            sudo nginx -t
            exit 1
          fi
          
          # 6. Reload Nginx
          echo "🔄 Reloading Nginx..."
          sudo nginx -s reload
          
          # 7. Verify Nginx is running
          echo "🔍 Verifying Nginx status..."
          sudo systemctl status nginx --no-pager -l
          
          echo "✅ Complete Server Nginx Management for auth.uzswlu.uz completed successfully!"
          echo "🌐 auth.uzswlu.uz is now configured to proxy to port 3080"
