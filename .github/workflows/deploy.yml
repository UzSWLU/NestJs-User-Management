name: Auto Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  deploy:
    name: Deploy
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 5
    steps:
      - name: Deploy
        timeout-minutes: 5
        run: |
          set -e
          cd /var/www/auth-api

          echo "📥 Pulling latest code..."
          git fetch origin main
          git reset --hard origin/main

          echo "🔄 Redeploying with latest code..."
          docker-compose -f docker-compose.prod.yml down
          docker-compose -f docker-compose.prod.yml build --no-cache api
          docker-compose -f docker-compose.prod.yml --env-file .env.production up -d --force-recreate

          echo "⏳ Waiting for containers..."
          sleep 10

          echo "✅ Deployed!"
          docker-compose -f docker-compose.prod.yml ps

          # Auto-configure server-level Nginx for auth.uzswlu.uz
          echo "🔧 Auto-configuring server-level Nginx for auth.uzswlu.uz..."
          
          echo "📝 Manual server-level Nginx configuration required:"
          echo "1. Create auth.uzswlu.uz configuration:"
          echo "   sudo tee /etc/nginx/sites-available/auth.uzswlu.uz > /dev/null << 'EOF'"
          echo "   server {"
          echo "       listen 80;"
          echo "       server_name auth.uzswlu.uz;"
          echo "       location /.well-known/acme-challenge/ {"
          echo "           root /var/www/html;"
          echo "       }"
          echo "       location / {"
          echo "           return 301 https://\$server_name\$request_uri;"
          echo "       }"
          echo "   }"
          echo "   server {"
          echo "       listen 443 ssl http2;"
          echo "       server_name auth.uzswlu.uz;"
          echo "       ssl_certificate /var/www/sertifikat/STAR25_uzswlu_uz.crt;"
          echo "       ssl_certificate_key /var/www/sertifikat/STAR25_uzswlu_uz.key;"
          echo "       ssl_protocols TLSv1.2 TLSv1.3;"
          echo "       ssl_prefer_server_ciphers off;"
          echo "       ssl_session_cache shared:SSL:10m;"
          echo "       ssl_session_timeout 10m;"
          echo "       ssl_session_tickets off;"
          echo "       add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;"
          echo "       add_header X-Frame-Options \"SAMEORIGIN\" always;"
          echo "       add_header X-Content-Type-Options \"nosniff\" always;"
          echo "       add_header X-XSS-Protection \"1; mode=block\" always;"
          echo "       add_header Referrer-Policy \"no-referrer-when-downgrade\" always;"
          echo "       location / {"
          echo "           proxy_pass http://127.0.0.1:3000;"
          echo "           proxy_set_header Host \$host;"
          echo "           proxy_set_header X-Real-IP \$remote_addr;"
          echo "           proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;"
          echo "           proxy_set_header X-Forwarded-Proto \$scheme;"
          echo "           proxy_set_header X-Forwarded-Host \$host;"
          echo "           proxy_set_header X-Forwarded-Port \$server_port;"
          echo "       }"
          echo "   }"
          echo "   EOF"
          echo ""
          echo "2. Enable the site:"
          echo "   sudo ln -sf /etc/nginx/sites-available/auth.uzswlu.uz /etc/nginx/sites-enabled/"
          echo ""
          echo "3. Test and reload Nginx:"
          echo "   sudo nginx -t && sudo systemctl reload nginx"
          echo ""
          echo "✅ Management API is running on port 3000"
          echo "📝 Server-level Nginx configuration requires manual setup"
