name: üöÄ Auto Deploy to Production

# Har git push qilganingizda avtomatik ishga tushadi
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'README.md'

jobs:
  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîê Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üöÄ Deploy to server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST || '172.22.0.19' }}
          SERVER_USER: ${{ secrets.SERVER_USER || 'root' }}
        run: |
          echo "üåê Connecting to $SERVER_USER@$SERVER_HOST..."

          # Add server to known hosts
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts

          # Deploy
          ssh $SERVER_USER@$SERVER_HOST << 'ENDSSH'
            set -e
            cd /var/www/auth-api
            
            echo "üì• Pulling latest code..."
            git fetch origin main
            git reset --hard origin/main
            
            echo "üî® Rebuilding containers..."
            docker-compose -f docker-compose.prod.yml up -d --build
            
            echo "‚è≥ Waiting for API..."
            sleep 15
            
            # Health check
            MAX_RETRIES=30
            RETRY_COUNT=0
            while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
              if docker-compose -f docker-compose.prod.yml exec -T api wget -q -O- http://localhost:3000/api/health > /dev/null 2>&1; then
                echo "‚úÖ API is healthy!"
                break
              fi
              RETRY_COUNT=$((RETRY_COUNT+1))
              echo "Waiting... ($RETRY_COUNT/$MAX_RETRIES)"
              sleep 2
            done
            
            if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
              echo "‚ùå Health check failed!"
              docker-compose -f docker-compose.prod.yml logs --tail=50 api
              exit 1
            fi
            
            echo "‚úÖ Deployment completed!"
          ENDSSH

      - name: üîç Verify deployment
        env:
          APP_URL: ${{ secrets.APP_URL || 'https://auth.uzswlu.uz' }}
        run: |
          echo "üîç Checking application health..."
          sleep 3

          HEALTH_CHECK=$(curl -s -o /dev/null -w "%{http_code}" $APP_URL/api/health || echo "000")

          if [ "$HEALTH_CHECK" = "200" ]; then
            echo "‚úÖ Application is healthy!"
            echo "üåê URL: $APP_URL"
          else
            echo "‚ö†Ô∏è Health check returned: $HEALTH_CHECK"
          fi

      - name: üìä Show deployment info
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST || '172.22.0.19' }}
          SERVER_USER: ${{ secrets.SERVER_USER || 'root' }}
        run: |
          echo "üìä Deployment Status:"
          ssh $SERVER_USER@$SERVER_HOST << 'ENDSSH'
            cd /var/www/auth-api
            echo "Container Status:"
            docker-compose -f docker-compose.prod.yml ps
          ENDSSH

      - name: üéâ Deployment complete
        run: |
          echo "‚úÖ Deployment completed successfully!"
          echo "Timestamp: $(date)"
          echo "Commit: ${{ github.sha }}"
          echo "Author: ${{ github.actor }}"
